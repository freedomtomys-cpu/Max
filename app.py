from flask import Flask, request
import asyncio
import nest_asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters
import os
import json

nest_asyncio.apply()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask
app = Flask(__name__)

# –ò–º–ø–æ—Ä—Ç—ã —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞ –∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤
from config import TELEGRAM_TOKEN
import database as db
from bot import start, button_handler, handle_message, callback_handler, admin_command, show_admin_panel

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π event loop –¥–ª—è Scalingo
loop = asyncio.get_event_loop()

# –°–æ–∑–¥–∞–µ–º Telegram Application, –Ω–æ –±–µ–∑ run_until_complete –Ω–∞ —Å—Ç–∞—Ä—Ç–µ
application = Application.builder().token(TELEGRAM_TOKEN).build()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –∏ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ, —á—Ç–æ–±—ã Flask —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª —Å—Ä–∞–∑—É
async def init_bot():
    await db.init_db()
    await application.initialize()

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ —Ñ–æ–Ω–µ
loop.create_task(init_bot())

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("admin", admin_command))
application.add_handler(MessageHandler(filters.Regex(
    '^(üìå Pinterest|üéµ TikTok|üì¶ –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞|üíé Plus\+|üë§ My Account|üîß Admin Panel)$'
), button_handler))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
application.add_handler(CallbackQueryHandler(callback_handler))

# –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç
@app.route('/')
def index():
    return 'MaxSaver Bot is running on Scalingo!'

# Webhook –¥–ª—è Telegram
@app.route(f'/{TELEGRAM_TOKEN}', methods=['POST'])
def webhook():
    json_str = request.get_data().decode('UTF-8')
    json_data = json.loads(json_str)
    update = Update.de_json(json_data, application.bot)
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π loop –≤–º–µ—Å—Ç–æ asyncio.run()
    loop.create_task(application.process_update(update))
    return 'OK'

# –î–æ–ø. –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
@app.route('/ping')
def ping():
    return {'status': 'ok', 'message': 'Bot is alive'}, 200

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
if __name__ == '__main__':
    port = int(os.getenv('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
